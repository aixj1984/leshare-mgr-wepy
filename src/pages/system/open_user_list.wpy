<template>
  <view class="container" wx:if="{{init}}">
    <view class="weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_select type-box">
        <view class="weui-cell__hd weui-cell__hd_in-select-after">
          <view class="weui-label">授权类型</view>
        </view>
        <view class="weui-cell__bd">
          <picker bindchange="typeChange" value="{{typeIndex}}" range="{{type}}" range-key="{{'name'}}">
            <view class="weui-select weui-select_in-select-after">{{type[typeIndex].name}}</view>
          </picker>
        </view>
      </view>
    </view>
    <view class="box"></view>
    <repeat for="{{page.list}}" key="index" index="index" item="item">
      <OpenUser :system.sync="item" @detail.user="detail" @create.user="create"/>
    </repeat>
    <!--占位符-->
    <Placeholder :show.sync="empty" />
  </view>
</template>

<script>
  import wepy from 'wepy';
  import open from '../../api/open';
  import base from '../../mixins/base';
  import pagination from '../../mixins/pagination';
  import OpenUser from '../../components/open/open_user';
  import Placeholder from '../../components/common/placeholder'

  export default class UserList extends wepy.page {
    data = {
      page: [],
      init: false,
      type: [
        {
          id: 1,
          key: '1',
          name: '小程序'
        },
        {
          id: 0,
          key: '0',
          name: '公众号'
        }
      ],
      key: '1',
      typeIndex: 0,
      actionSheetHidden: true
    };
    async onLoad () {
      this.page = await open.manageSystem(this.key);
      this.next();
    };
    params() {
      return {
        type: this.key
      };
    };
    methods = {
      detail(system) {
        this.$preload('param', system);
        this.$navigate('system_user_detail');
      },
      create (system) {
        this.$preload('param', system);
        this.$navigate('system_create_leApp');
      },
      async typeChange(e) {
        this.key = this.type[e.detail.value].key;
        this.typeIndex = e.detail.value;
        await this.reload();
      }
    };
    components = {
      OpenUser: OpenUser,
      Placeholder: Placeholder
    };
    computed = {};
    mixins = [base, pagination];
    config = {
      navigationBarTitleText: '开放平台',
      enablePullDownRefresh: true
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";

  .type-box{
    background-color: #fff;
    margin-right: -1px;
    position: fixed;
    top: 0;
    width: 101%;
    height: rpx(85);
  }
  .box{
    height: rpx(100);
  }
</style>
