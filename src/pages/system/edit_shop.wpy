<template>
  <Tips/>
  <view class="container" wx:if="{{init}}">
    <!--照片上传区域-->
    <ImageUploader class="{{mode == 'create' ? 'none' : ''}}" :pictures.sync="pictures" otherClass="shop-swiper"
                   top="260" maxSize="6" @toggle.user="toggle"/>

    <view class="hr"></view>

    <!--店铺名称-->
    <view wx:if="{{mode == 'edit'}}" class="name-box row-center">
      <image class="icon-xl" src="{{shop.avatar}}" @tap="avatar"/>
      <input class="shop-name" id="name" placeholder="请输入店铺名称" value="{{shop.name}}" @input="input"/>
    </view>

    <view class="hr"></view>

    <view class="weui-cells weui-cells-form">

      <view class="weui-cell">
        <view class="weui-cell__bd">店铺分类</view>
        <view class="weui-cell__ft category-box" @tap="show">{{shop.categoryName == null ? '请选择' : shop.categoryName}}</view>
      </view>

      <view class="weui-cell weui-cell_switch">
        <view class="weui-cell__bd">自动接单</view>
        <view class="weui-cell__ft">
          <switch checked="{{shop.autoOrder}}" id="autoOrder" @change="input"/>
        </view>
      </view>

      <view class="weui-cell weui-cell_switch">
        <view class="weui-cell__bd">线下支付</view>
        <view class="weui-cell__ft">
          <switch checked="{{shop.offPay}}" id="offPay" @change="input"/>
        </view>
      </view>

      <view class="weui-cell weui-cell_switch">
        <view class="weui-cell__bd">堂食点餐</view>
        <view class="weui-cell__ft">
          <switch checked="{{shop.inShop}}" id="inShop" @change="input"/>
        </view>
      </view>

      <view class="weui-cell weui-cell_switch">
        <view class="weui-cell__bd">会员卡</view>
        <view class="weui-cell__ft">
          <switch checked="{{shop.supportMember}}" id="supportMember" @change="input"/>
        </view>
      </view>

      <view class="weui-cell">
        <view class="weui-cell__bd" style="min-width: 150rpx;">店铺位置</view>
        <view @tap.stop="chooseLocation" style="min-width: 500rpx;">
          <view class="weui-cell__ft">{{shop.latitude ? '已选择(点击更换)' : '点击选择'}}</view>
        </view>
      </view>

      <view class="weui-cell {{mode == 'create' ? 'none' : ''}}">
        <view class="weui-cell__bd" style="min-width: 150rpx;">店铺管理员</view>
        <view @tap="admin({{shop.id}})" style="min-width: 500rpx;">
          <view class="weui-cell__ft weui-cell__ft_in-access">已有{{sellers.length}}位管理员</view>
        </view>
      </view>

    </view>
    <view class="mt10"></view>
    <view class="weui-cells weui-cells-form">

      <view wx:if="{{mode == 'create'}}" class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">店铺名称</view>
        </view>
        <input class="weui-input" id="name" placeholder="请输入店铺名称" value="{{shop.name}}" @input="input"/>
      </view>

      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">店铺地址</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" id="address" @input="input" value="{{shop.address}}"
                 placeholder="请输入店铺地址"/>
        </view>
        <view class="weui-cell__ft">
        </view>
      </view>

      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">联系电话</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" id="phone" @input="input" value="{{shop.phone}}" placeholder="请输入电话号码"
                 maxlength="11"/>
        </view>
        <view class="weui-cell__ft">
        </view>
      </view>

      <view class="weui-cell">
        <view class="weui-cell__bd">店铺描述</view>
      </view>

      <view class="weui-cell" wx:if="{{!uploader}}">
        <view class="weui-cell__bd">
                <textarea class="weui-textarea" id="describe" value="{{shop.describe}}" placeholder="请输入店铺描述"
                          style="height: 4.0em" maxlength="100" @input="input"/>
          <view class="weui-textarea-counter">{{shop.describe ? shop.describe.length : 0}}/100</view>
        </view>
      </view>
    </view>

    <view class="zan-panel">
      <view class="zan-btns">
        <button class="zan-btn zan-btn--fill" @tap="save">保存</button>
        <button wx:if="{{mode == 'edit'}}" class="zan-btn zan-btn--fill remove" @tap="remove({{shop.id}})">删除</button>
      </view>
    </view>

  <!--下拉选择器-->
    <SliderSelector :display.sync="display"
                  :list.sync="categories"
                  :title="categoriesTitle"
                  displatyDefault="{{false}}"
                  @change.user="change"/>
  </view>

</template>

<script>
  import wepy from 'wepy'
  import base from '../../mixins/base';
  import input from '../../mixins/input';
  import FormTips from '../../components/weui/tips';
  import ImageUploader from '../../components/system/image_uploader';
  import SliderSelector from '../../components/common/slider_selector';
  import Tips from '../../utils/Tips';
  import WxUtils from '../../utils/WxUtils';
  import shop from '../../api/shop';
  import Event from '../../utils/Event';

  export default class EditShop extends wepy.page {
    data = {
      shop: {},
      pictures: [],
      categories: [],
      sellers: [],
      display: false,
      uploader: false,
      shopId: null,
      mode: 'create',
      init: false
    };

    async onLoad (option) {
      const {id, mode} = JSON.parse(option.param);
      this.shopId = id;
      this.mode = mode;
      if (this.mode == 'edit') {
        const [shops, categories, sellers] = await Promise.all([shop.shop(this.shopId), shop.getShopCategories(), shop.getShopAdminList(this.shopId)]);
        this.shop = shops;
        this.sellers = sellers == null ? [] : sellers;
        if (this.shop.categoryName == null) {
          this.shop.categoryName = '请选择'
        }
        if (this.shop.describe == null) {
          this.shop.describe = ''
        }
        this.categories = categories;
        this.shop.categoryName = this.categories
          .find(item => item.id == this.shop.categoryId).name;
        this.pictures = this.shop.images;
      } else {
        this.categories = await shop.getShopCategories();
      }
      this.loaded();
      Event.listen(Event.EDIT_SHOP_UPDATE, this.doLoad.bind(this), this);
    };
    async doLoad () {
      const sellers = await shop.getShopAdminList(this.shopId);
      this.sellers = sellers == null ? [] : sellers;
      this.$apply();
    };
    methods = {
      chooseLocation () {
        wepy.chooseLocation({
          type: 'wgs84'
        }).then(res => {
          this.shop.latitude = res.latitude;
          this.shop.longitude = res.longitude;
          let location = res.location;
          if (location == '' || location == undefined) {
            location = '请选择店铺地址';
          }
          this.shop.location = location;
          this.$apply();
        });
      },
      input (e) {
        this.shop[e.target.id] = e.detail.value;
      },
      async save () {
        if (!this.validate()) {
          return;
        }
        this.shop.avatar = 'http://img.leshare.shop/leshare/logo.jpg';
        this.shop.autoOrder = this.shop.autoOrder ? 1 : 0;
        this.shop.offPay = this.shop.offPay ? 1 : 0;
        this.shop.inShop = this.shop.inShop ? 1 : 0;
        this.shop.supportMember = this.shop.supportMember ? 1 : 0;
        if (this.mode == 'create') {
          await shop.addShop(this.shop);
        } else {
          const data = {
            images: []
          };
          Tips.loading('保存中');
          for (let picture of this.pictures) {
            if (picture.url.substring(0, 11) == 'http://tmp/') {
              const result = await shop.image(picture.url);
              const image = JSON.parse(result);
              data.images.push(image);
            } else {
              data.images.push(picture);
            }
          }
          this.shop.images = data.images;
          await shop.updateShop(this.shop);
        }
        await Tips.success('保存成功！');
        Event.emit(Event.SHOP_LIST_UPDATE);
        wepy.navigateBack();
      },
      show () {
        this.display = 'true';
      },
      change ({selectedId, selectedName}) {
        this.shop.categoryName = selectedName;
        console.info(selectedId);
        this.shop.categoryId = selectedId;
      },
      toggle (value) {
        this.uploader = value == 'true';
      },
      async avatar () {
        try {
          const param = {
            count: 1,
            sizeType: ['compressed']
          };
          const file = await WxUtils.chooseImage(param, 2);
          if (file.length == 0) {
            return;
          }
          Tips.loading('上传中');
          const result = await shop.image(file[0], this.shop.id);
          const image = JSON.parse(result);
          this.shop.avatar = image.url;
          this.$apply();
        } finally {
          Tips.loaded();
        }
      },
      async remove(id) {
        // 执行正常的流程
        await Tips.confirm('确定要删除该店铺信息吗？');
        // 传第一步获取到的已选择的数组
        await shop.deleteShop(id);
        await Tips.success('删除成功');
        Event.emit(Event.SHOP_LIST_UPDATE);
        wepy.navigateBack();
      },
      admin(id) {
        const param = {
          id: id,
          name: this.shop.name
        };
        this.$navigate('shop_admin_list?param=' + JSON.stringify(param));
      }
    };
    validate () {
      const rules = [
        {
          value: this.shop.name,
          method: 'required',
          message: '店铺名不能为空'
        },
        {
          value: this.shop.name,
          method: 'minlength',
          param: 2,
          message: '店铺名长度过短'
        },
        {
          value: this.shop.phone,
          method: 'required',
          message: '店铺电话不能为空'
        },
        {
          value: this.shop.phone,
          method: 'tel',
          message: '请输入正确的手机格式'
        },
        {
          value: this.shop.address,
          method: 'required',
          message: '店铺地址不能为空'
        },
        {
          value: this.shop.categoryName,
          method: 'required',
          message: '请选择店铺分类'
        }
      ];
      return this.check(rules);
    };
    components = {
      Tips: FormTips,
      SliderSelector: SliderSelector,
      ImageUploader: ImageUploader
    };
    mixins = [base, input];
    config = {
      navigationBarTitleText: '编辑店铺信息'
    };
  }

</script>

<style lang="scss">
  @import "../../styles/variable";

  .none {
    display: none;
  }

  .shop-swiper {
    height: rpx(375);
    width: rpx(750);
    image {
      width: 100%;
      height: rpx(375);
    }
  }

  .name-box {
    background-color: #FFF;
    padding: rpx(20);
    height: rpx(60);

    .shop-name {
      margin-left: rpx(20);
      font-size: $text-xxl;
      letter-spacing: 2px;
      flex-grow: 1;
    }
  }

  .category-box{
    width: 30%;
    height: 48rpx;
  }

  .remove{
    background-color: red;
  }
</style>
